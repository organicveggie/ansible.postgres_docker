---
name: "Molecule"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch: null

env:
  PROJECT_NAME: "organicveggie.postgres_docker"

jobs:
  lint:
    name: "Lint"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the codebase."
        uses: "actions/checkout@v2"
        with:
          path: "${{ PROJEC_NAME }}"

      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.8

      - name: "Install lint dependencies."
        run: "pip3 install yamllint ansible ansible-lint"

      - name: "Install role dependencies and Lint code"
        run: |
          ansible-galaxy role install -r molecule/resources/requirements.yml
          yamllint -c .yamllint -f github -s .
          ansible-lint
        working-directory: "${{ PROJECT_NAE }}"

  molecule:
    name: "Molecule"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - "default"
          - "custom_names"
          - "init_scripts"
          - "no_volumes"
          - "traefik"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          path: "${{ PROJECT_NAE }}"

      - name: "Set up Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.8

      - name: "Install test dependencies"
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install ansible molecule molecule[docker]

      - name: "Run Molecule testts"
        run: |
          cd organicveggie.postgres_docker
          molecule --debug test --scenario-name ${{ matrix.scenario }} -d docker
        working-directory: "${{ PROJECT_NAME }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_PLAYBOOK: "${{ matrix.playbook }}"
