---
- name: "Verify"
  hosts: "all"
  gather_facts: false
  become: true

  vars:
    pg_docker_name: "postgres"
    pg_docker_volume_name_init: "postgresql-initscripts"
    pg_docker_volume_name_conf: "postgresql-conf"
    pg_docker_volume_name_data: "postgresql-data"

  tasks:
    - name: "Get info on init volume"
      community.docker.docker_volume_info:
        name: "{{ pg_docker_volume_name_init }}"
      register: "volume_info_init"

    - name: "Verify init volume exists"
      ansible.builtin.assert:
        that: "volume_info_init.exists"

    - name: "Get info on conf volume"
      community.docker.docker_volume_info:
        name: "{{ pg_docker_volume_name_conf }}"
      register: "volume_info_conf"

    - name: "Verify conf volume exists"
      ansible.builtin.assert:
        that: "volume_info_conf.exists"

    - name: "Get info on data volume"
      community.docker.docker_volume_info:
        name: "{{ pg_docker_volume_name_data }}"
      register: "volume_info_data"

    - name: "Verify data volume exists"
      ansible.builtin.assert:
        that: "volume_info_data.exists"

    - name: "Get info on container"
      community.docker.docker_container_info:
        name: "{{ pg_docker_name }}"
      register: "container_info"

    - name: "Verify container exists and is running"
      ansible.builtin.assert:
        that:
          - "container_info.exists"
          - "container_info.container['State']['Running']"

    - name: "Verify Traefik label"
      ansible.builtin.assert:
        that:
          - "container_info.container['Config']['Labels']['traefik.enable'] == 'false'"

# - name: "Verify additionl container labels not set"
#   ansible.builtin.assert:
#     that:
#       - "not container_info.container['Config']['Labels'][{{ item }}] | default(None)"
#   with_items:
#     - "traefik.tcp.routers.postgres.entrypoints"
#     - "traefik.tcp.routers.postgres.rule"
#     - "traefik.tcp.services.postgres.loadBalancer.server.port"
